% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_planner.R
\name{plot_planner}
\alias{plot_planner}
\title{Plot or get plottable data from Planner}
\usage{
plot_planner(
  planner,
  by = "tasks",
  data_only = FALSE,
  plot_type = NA,
  interactive = FALSE,
  ...
)
}
\arguments{
\item{planner}{Planner data returned from read_planner()}

\item{by}{Column to filter planner data by.
Either: "tasks", "checklists", "priority",
        "late", "assigned_to", or "completed_by"}

\item{data_only}{If \code{TRUE}, makes function return plottable data as a tibble.}

\item{plot_type}{Character of plot type. Supports: \code{NA}, \code{basic}.}

\item{interactive}{If \code{TRUE}, returns a \code{plotly} interactive plot.}

\item{\dots}{Extra arguments for ggplot labs()}
}
\value{
Either plottable data as a \code{tibble}, \code{ggplot} object, or \code{plotly} object.
}
\description{
Allows the ability to quickly
             filter plottable data by column or
             directly plot with \code{ggplot2}/\code{plotly}.
}
\examples{
\dontrun{
     ## Basic Usage
     plot_planner(plan_xlsx, by = "checklists")

     ## Filtered Plottable Plan Data
     plot_planner(plan_xlsx, by = "priority", data_only = TRUE)

     ## Extended with ggplot2
     plot_planner(
         plan_xlsx,
         by = "tasks",
         plot_type = "basic",
         title = "Tasks Progress"
     ) +
     geom_bar() +
     theme_bw()

    ## Extended with plotly
    plot_planner(
        plan_xlsx,
        by = "checklists",
        interactive = TRUE,
        title = "Interactive Donut Chart"
    )
}
}
